#!/bin/bash

# Update AUR package(s) - Work in Progress

aurUpdate () {
	softName=${1##*/}
	softName=${softName^^}

	gitPull=$(git pull)
	if [[ $gitPull != "Already up to date." ]]; then 
			echo
			echo ":: Show git pull output? [Y/n]: "
			read usrGitIn
			usrGitIn=${usrGitIn:0:1} 
			if [[ ${usrGitIn^} == "Y" || ${usrGitIn^} == "" ]]; then 
				echo "$gitPull"
			elif [[ ${usrGitIn^} == "N" || ${usrGitIn^} != "Y" || ${usrGitIn^} != "" ]]; then
				:
			fi
			echo
			echo ":: Proceed with $softName package build? [Y/n]: "
			read usrIn
			usrIn=${usrIn:0:1}
			if [[ ${usrIn^} == "Y" || ${usrIn^} == "" ]]; then
				makepkg -sri
					whileBrk=true
					echo
					echo ":: Clean $softName repo files? [Y/n]: "
					read userChoice
					userChoice=${userChoice:0:1}		
					if [[ ${userChoice^} == "Y" || ${userChoice^} == "" ]]; then
						git clean -fdx
					elif [[ ${userChoice^} == "N" || ${userChoice^} != "Y" || ${userChoice^} != "" ]]; then
						:
					fi
				echo
				echo "::: AUR $softName package now updated and installed. :::"
			elif [[ ${firstLet^} == "N" || ${firstLet^} != "Y" || ${firstLet^} != "" ]]; then
				echo "Alright, maybe next time; Later tater!"
			fi
	else
		echo
		echo $softName
		echo $gitPull 
    	echo "::: Stay cool :::"
	fi
}

dirLoop () {
	updateDirArr=( $(find ~+ -type f -name "PKGBUILD" 2>&1 | grep -v "Permission denied") )
	
	if [[ $updateDirArr != "" ]]; then	
		for d in ${updateDirArr[@]}
		do
			d=${d%/*}
			cd $d
			if [[ -e .git && -d .git && -e PKGBUILD ]]; then
				aurUpdate $d
			fi
		done
	else
		echo
		echo "Directory does not contain an AUR package."
	fi
}

## TODO:Creating a log file to show last update date based up PKGBUILD modified date

echo
echo ":: Run AUR Package Update? Note: you may update a single application by entering the cloned repo folder [Y/n]"
read resp
resp=${resp:0:1}
if [[ ${resp^} == "Y" || ${resp^} == "" ]]; then 
	funcBreak=true
	dirLoop
elif [[ ${resp^} == "N" || ${resp^} != "Y" || ${resp^} != "" ]]; then
	echo
	echo "Alrighty."
	exit
fi
